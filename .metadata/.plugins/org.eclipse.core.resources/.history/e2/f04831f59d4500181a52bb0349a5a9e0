package br.com.caelum.tarefas.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import br.com.caelum.tarefas.dao.JdbcTarefaDao;
import br.com.caelum.tarefas.modelo.Tarefa;

@Controller
@RequestMapping("/tarefa")
public class TarefasController {

	private JdbcTarefaDao dao;
	
	@Autowired
	public TarefasController(JdbcTarefaDao dao) {
		this.dao = dao;
	}
	
	@RequestMapping("/formulario")
	public String formulario(){
		return "/form/adiciona-tarefa";
	}
	
	@RequestMapping("/adicionar")
	public String adicionar(@Valid Tarefa novaTarefa, BindingResult result){
		if(result.hasFieldErrors()){
			return "/form/adiciona-tarefa";
		}
		dao.adiciona(novaTarefa);
		return "tarefa-adicionada";
	}
	
	@RequestMapping("/listar")
	public String lista(Model model){
		List<Tarefa> tarefas = dao.lista();
		model.addAttribute("listaTarefas", tarefas);
		return "tarefa-listada";
	}
	
	@RequestMapping("/remover")
	public String remove(Tarefa tarefa){
		dao.remove(tarefa);
		return "redirect:listar";
	}
	
	@RequestMapping("/context")
	public String pegarContext(Tarefa tarefa, Model model){
		model.addAttribute("tarefa", dao.buscaPorId(tarefa.getId()));
		return "/form/visualizar-context";
	}
	
	@RequestMapping("/alterar")
	public String altera(Tarefa tarefa){
		dao.altera(tarefa);
		return "redirect:listar"; 
			
	}
	
	@ResponseBody //so finaliza quando o response for 200
	@RequestMapping("finalizar")
	public void finaliza(Tarefa tarefa){
		JdbcTarefaDao dao = new JdbcTarefaDao();
		dao.finaliza(tarefa.getId());
	}
}
